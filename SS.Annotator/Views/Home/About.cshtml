@{
    ViewBag.Title = "About";
}

<link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700|Droid+Sans+Mono" rel="stylesheet">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<link href="~/Content/jquery.highlight-within-textarea.css" rel="stylesheet" />
<script src="~/Scripts/jquery.highlight-within-textarea.js"></script>

<style>
    .hwt-container {
        background-color: #f8f9fa;
    }

    .hwt-content {
        width: 760px;
        height: 100px;
        padding: 20px;
        border: 1px solid #adb5bd;
        color: inherit;
        font: 18px/25px 'Droid Sans Mono', sans-serif;
    }

    .hwt-input:focus {
        outline-color: #495057;
    }

    .hwt-content mark {
        border-radius: 3px;
        background-color: #d0bfff;
    }

    .hwt-content mark.red {
        background-color: #ffc9c9;
    }

    .hwt-content mark.blue {
        background-color: #a3daff;
    }

    .hwt-content mark.yellow {
        background-color: #ffec99;
    }
</style>

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>


<div class="wrapper">
    <h1>Highlight Within Textarea v2</h1>
    <p>Highlight <input type="text" id="blue-word" value="possible"> in blue and <input type="text" id="pink-word" value="magic"> in pink.</p>
    <textarea spellcheck="false">The two words above are highlighted in this textarea. Such a thing isn't actually possible with HTML, but we can fake it with some CSS and JS magic. Go ahead, type some stuff in here or change the words above to see the real-time highlighting in action.</textarea>
</div>

<script>
    function highlightBlue() {
        return $('#blue-word').val();
    }

    function highlightPink() {
        return $('#pink-word').val();
    }

    function updateHighlights() {
        $('textarea').highlightWithinTextarea('update');
    }

    $('textarea').highlightWithinTextarea({
        highlight: [
            {
                highlight: highlightBlue,
                className: 'blue'
            },
            {
                highlight: highlightPink,
                className: 'pink'
            }
        ]
    });

    $('input').on('input', updateHighlights);
</script>